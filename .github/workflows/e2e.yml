name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run E2E tests nightly at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      framework:
        description: 'Framework to test (all, nextjs, expo, tauri, flutter)'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - nextjs
          - expo
          - tauri
          - flutter

jobs:
  e2e-tests:
    name: E2E Tests - ${{ matrix.framework }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    strategy:
      fail-fast: false
      matrix:
        include:
          # Next.js tests
          - framework: nextjs
            os: ubuntu-latest
            node: 20

          # Expo tests
          - framework: expo
            os: ubuntu-latest
            node: 20

          # Tauri tests (needs Rust)
          - framework: tauri
            os: ubuntu-latest
            node: 20

          # Flutter tests
          - framework: flutter
            os: ubuntu-latest
            node: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build CLI
        run: pnpm run build

      # Framework-specific setup
      - name: Setup Rust (for Tauri)
        if: matrix.framework == 'tauri'
        uses: dtolnay/rust-toolchain@stable

      - name: Install Tauri dependencies (Ubuntu)
        if: matrix.framework == 'tauri' && matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev \
            build-essential \
            curl \
            wget \
            file \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Setup Flutter
        if: matrix.framework == 'flutter'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          channel: 'stable'

      # Install Patrol for Flutter tests (optional)
      - name: Install Patrol CLI (for Flutter)
        if: matrix.framework == 'flutter'
        continue-on-error: true
        run: |
          dart pub global activate patrol_cli
          echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH

      # Install Playwright browsers
      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps chromium

      # Install Maestro for Expo tests (optional)
      - name: Install Maestro (for Expo)
        if: matrix.framework == 'expo'
        continue-on-error: true
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH

      # Run E2E tests for specific framework
      - name: Run ${{ matrix.framework }} E2E Tests
        run: pnpm exec playwright test --project="${{ matrix.framework }}-e2e"
        env:
          CI: true
          HEADLESS: true

      # Upload test results
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.framework }}-${{ matrix.os }}
          path: |
            playwright-report/
            test-results/
          retention-days: 7

      # Upload screenshots on failure
      - name: Upload failure screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: failure-screenshots-${{ matrix.framework }}-${{ matrix.os }}
          path: test-results/**/*.png
          retention-days: 7

  # Comprehensive test that runs all frameworks
  comprehensive-e2e:
    name: Comprehensive E2E Test
    runs-on: ubuntu-latest
    timeout-minutes: 90
    if: github.event_name == 'schedule' || github.event.inputs.framework == 'all'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build CLI
        run: pnpm run build

      # Setup all framework dependencies
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.0-dev \
            build-essential \
            curl \
            wget \
            file \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          channel: 'stable'

      # Install mobile testing tools
      - name: Install Maestro
        continue-on-error: true
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH

      - name: Install Patrol CLI
        continue-on-error: true
        run: |
          dart pub global activate patrol_cli
          echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH

      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps chromium

      # Run all E2E tests
      - name: Run All E2E Tests
        run: pnpm run test:e2e
        env:
          CI: true
          HEADLESS: true

      # Generate test report
      - name: Generate Test Report
        if: always()
        run: |
          echo "# E2E Test Report" > test-report.md
          echo "Date: $(date)" >> test-report.md
          echo "" >> test-report.md
          if [ -f test-results/junit.xml ]; then
            echo "## Test Results" >> test-report.md
            # Parse junit.xml for summary (simplified)
            echo "See artifacts for full report" >> test-report.md
          fi

      - name: Upload comprehensive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: comprehensive-e2e-results
          path: |
            playwright-report/
            test-results/
            test-report.md
          retention-days: 30

  # Quick smoke test for PRs
  smoke-test:
    name: Smoke Test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build CLI
        run: pnpm run build

      - name: Install Playwright
        run: pnpm exec playwright install --with-deps chromium

      # Run only smoke tests (marked with @smoke)
      - name: Run Smoke Tests
        run: pnpm exec playwright test --project="smoke-tests"
        env:
          CI: true
          HEADLESS: true

      - name: Upload smoke test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-test-results
          path: |
            playwright-report/
            test-results/
          retention-days: 7