name: Publish to npm

on:
  push:
    branches:
      - main
  release:
    types: [created]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 全履歴を取得してタグ情報を確実に入手

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test:run

      - name: Build package
        run: pnpm build

      - name: Check if version changed
        id: version
        run: |
          # 現在のpackage.jsonからバージョンを取得
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

          # 前のタグと比較してバージョン変更をチェック
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          LATEST_VERSION=${LATEST_TAG#v}

          echo "Latest tag: $LATEST_TAG"
          echo "Latest version: $LATEST_VERSION"
          echo "Current version: $CURRENT_VERSION"

          if [ "$CURRENT_VERSION" != "$LATEST_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Version changed from $LATEST_VERSION to $CURRENT_VERSION"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "Version unchanged: $CURRENT_VERSION"
          fi

          echo "prev-version=$LATEST_VERSION" >> $GITHUB_OUTPUT

      - name: Check if version already exists on npm
        if: steps.version.outputs.changed == 'true'
        id: npm-check
        run: |
          VERSION=$(node -p "require('./package.json').version")
          if npm view "fluorite-flake@$VERSION" version 2>/dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Version $VERSION already exists on npm"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Version $VERSION not found on npm, can publish"
          fi

      - name: Publish to npm
        if: steps.version.outputs.changed == 'true' && steps.npm-check.outputs.exists == 'false'
        run: |
          echo "🚀 Publishing fluorite-flake@${{ steps.version.outputs.version }} to npm..."
          npm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}

          # 実際の公開実行
          pnpm publish --access public --no-git-checks

          echo "✅ Successfully published fluorite-flake@${{ steps.version.outputs.version }}"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Skip publish (version exists)
        if: steps.version.outputs.changed == 'true' && steps.npm-check.outputs.exists == 'true'
        run: |
          echo "⚠️ Version $(node -p "require('./package.json').version") already published to npm, skipping publish step"

      - name: Create GitHub Release
        if: steps.version.outputs.changed == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          body: |
            ## 📦 fluorite-flake v${{ steps.version.outputs.version }}

            ### Changes in this release:
            - See [commit history](https://github.com/${{ github.repository }}/compare/v${{ steps.version.outputs.prev-version }}...v${{ steps.version.outputs.version }}) for details

            ### Installation
            ```bash
            npm install -g fluorite-flake@${{ steps.version.outputs.version }}
            ```
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
