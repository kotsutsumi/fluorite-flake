{{#if useStorage}}
import { uploadBuffer } from '@/lib/storage';

export async function saveProfileImage(file: File, userId: string) {
  const arrayBuffer = await file.arrayBuffer();
  const buffer = Buffer.from(arrayBuffer);
  const extension = file.name.split('.').pop()?.toLowerCase() || 'png';
  const filename = `profiles/${userId}-${Date.now()}.${extension}`;
  return uploadBuffer(buffer, filename, file.type || 'application/octet-stream');
}
{{else}}
import path from 'node:path';
import fs from 'fs-extra';

const uploadsDir = path.join(process.cwd(), 'public', 'uploads');

async function ensureUploadsDir() {
  await fs.ensureDir(uploadsDir);
}

export async function saveProfileImage(file: File, userId: string) {
  await ensureUploadsDir();
  const arrayBuffer = await file.arrayBuffer();
  const buffer = Buffer.from(arrayBuffer);
  const extension = file.name.split('.').pop()?.toLowerCase() || 'png';
  const filename = `${userId}-${Date.now()}.${extension}`;
  const storagePath = path.join(uploadsDir, filename);
  await fs.outputFile(storagePath, buffer);
  return `/uploads/${filename}`;
}
{{/if}}