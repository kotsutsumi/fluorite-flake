'use client';

import Link from 'next/link';
import { usePathname } from 'next/navigation';
import { LayoutDashboard, Building2, Users2, UserRound } from 'lucide-react';
import { APP_ROLES, type AppRole } from '@/lib/roles';
import { cn } from '@/lib/utils';

const NAV_ITEMS = [
  {
    href: '/',
    label: 'ダッシュボード',
    icon: LayoutDashboard,
    roles: [APP_ROLES.ADMIN, APP_ROLES.ORG_ADMIN, APP_ROLES.USER],
  },
  {
    href: '/organizations',
    label: '組織管理',
    icon: Building2,
    roles: [APP_ROLES.ADMIN],
  },
  {
    href: '/users',
    label: 'ユーザー管理',
    icon: Users2,
    roles: [APP_ROLES.ADMIN, APP_ROLES.ORG_ADMIN],
  },
  {
    href: '/profile',
    label: 'プロフィール',
    icon: UserRound,
    roles: [APP_ROLES.ADMIN, APP_ROLES.ORG_ADMIN, APP_ROLES.USER],
  },
] as const;

interface SidebarProps {
  user: {
    id: string;
    email: string;
    name: string;
    role: AppRole | string;
  };
}

export function Sidebar({ user }: SidebarProps) {
  const pathname = usePathname();
  const role = (user.role as AppRole) ?? APP_ROLES.USER;

  return (
    <aside className="hidden w-64 border-r bg-background/80 p-6 shadow-sm md:block">
      <div className="mb-8">
        <p className="text-sm text-muted-foreground">ログイン中のユーザー</p>
        <h2 className="text-lg font-semibold">{user.name || user.email || 'Unknown User'}</h2>
        <p className="text-xs text-muted-foreground">ロール: {roleLabel(role)}</p>
      </div>
      <nav className="space-y-2">
        {NAV_ITEMS.filter((item) => item.roles.includes(role as AppRole)).map((item) => {
          const Icon = item.icon;
          const isActive = pathname === item.href;

          return (
            <Link
              key={item.href}
              href={item.href}
              className={cn(
                'flex items-center gap-3 rounded-lg px-3 py-2 text-sm transition-colors',
                isActive ? 'bg-primary text-primary-foreground shadow-sm' : 'text-muted-foreground hover:bg-muted'
              )}
            >
              <Icon className="h-4 w-4" />
              {item.label}
            </Link>
          );
        })}
      </nav>
    </aside>
  );
}

function roleLabel(role: AppRole) {
  switch (role) {
    case APP_ROLES.ADMIN:
      return '管理ユーザー';
    case APP_ROLES.ORG_ADMIN:
      return '組織管理ユーザー';
    default:
      return '一般ユーザー';
  }
}
