{
  "cli": {
    "metaDescription": "Boilerplate generator CLI for Next.js, Expo, and Tauri projects",
    "usage": "Usage: fluorite-flake <command> [options]",
    "commandsHeading": "Commands:",
    "commandLines": [
      "  create <name>    Create a new project",
      "  new <name>       Create a new project (alias for create)",
      "  dashboard        Launch TUI dashboard"
    ],
    "projectTypes": "Project types: nextjs, expo, tauri",
    "examplesHeading": "Examples:",
    "exampleLines": [
      "  fluorite-flake create my-app",
      "  fluorite-flake new desktop-app --type tauri --template typescript"
    ],
    "helpHint": "Use --help with any command for more information",
    "devNoSubcommand": "Main command called with no subcommand"
  },
  "create": {
    "commandDescription": "Create a new project",
    "newCommandDescription": "Create a new project (alias for create)",
    "args": {
      "type": "Project type (nextjs|expo|tauri)",
      "name": "Project name",
      "template": "Template to use",
      "dir": "Target directory",
      "force": "Force creation (overwrite existing)",
      "monorepo": "Create as monorepo structure (default: true)",
      "simple": "Create a simple project (non-monorepo structure)",
      "database": "Database to use (turso|supabase)"
    },
    "invalidProjectType": "‚ùå Invalid project type: {type}",
    "availableProjectTypes": "Available types: nextjs, expo, tauri",
    "invalidTemplate": "‚ùå Invalid template \"{template}\" for {projectType}",
    "availableTemplates": "Available templates: {templates}",
    "selectProjectTypePrompt": "Select a project type:",
    "selectTemplatePrompt": "Select a template for {typeName}:",
    "selectDatabasePrompt": "Select a database:",
    "confirmMonorepoPrompt": "The {template} template works best as a monorepo. Enable monorepo structure?",
    "invalidDatabase": "‚ùå Invalid database type: {database}",
    "availableDatabases": "Available databases: turso, supabase",
    "spinnerCreating": "Creating {type} project: {name}",
    "spinnerSettingUp": "Setting up {type} project structure...",
    "spinnerInstallingDeps": "Installing dependencies...",
    "spinnerConfiguringTemplate": "Configuring {template} template...",
    "spinnerSuccess": "‚úÖ Successfully created {type} project: {name}",
    "spinnerFailure": "‚ùå Failed to create project",
    "errorPrefix": "Error:",
    "nextStepsHeading": "Next steps:",
    "nextStepsCd": "  cd {directory}",
    "nextStepCommands": {
      "expo": "  npx expo start",
      "tauri": "  npm run tauri dev",
      "default": "  npm run dev"
    },
    "debugCommandCalled": "Create command called with:",
    "debugProjectConfig": "Project configuration:",
    "debugGenerationSuccess": "Project generation completed successfully",
    "debugGenerationFailure": "Project generation failed:",
    "pnpmNotFound": "‚ùå pnpm not found.",
    "pnpmVersionTooOld": "‚ùå pnpm v{version} detected. v{minVersion}.0.0+ required.",
    "pnpmVersionValid": "‚úÖ pnpm v{version} detected.",
    "pnpmInstallGuide": "üì¶ pnpm installation guide:",
    "pnpmInstallCommands": [
      "  npm install -g pnpm@latest",
      "  # or",
      "  curl -fsSL https://get.pnpm.io/install.sh | sh -"
    ],
    "pnpmMoreInfo": "  For more information: https://pnpm.io/installation",
    "promptProjectName": "Enter project name:",
    "projectNamePlaceholder": "Project name (e.g. my-fluorite-project)",
    "projectNameRequired": "‚ùå Project name is required. Please enter a project name.",
    "projectAlreadyExists": "‚ö†Ô∏è A project with the name '{name}' already exists. Please choose a different name.",
    "usingDefaultProjectName": "‚ÑπÔ∏è Using default project name: my-fluorite-project",
    "invalidProjectName": "‚ùå Invalid project name. Only alphanumeric characters, hyphens, and underscores are allowed.",
    "directoryExists": "‚ö†Ô∏è Directory '{0}' already exists.",
    "confirmOverwrite": "Do you want to remove it and create a new project? (y/N): ",
    "directoryRemoved": "‚úÖ Removed existing directory: {0}",
    "failedToRemoveDirectory": "‚ùå Failed to remove directory: {0}",
    "operationCancelled": "Operation cancelled."
  },
  "readme": {
    "title": "{name}",
    "description": "A {type} project created with Fluorite Flake.",
    "gettingStartedHeading": "Getting Started",
    "gettingStartedCommands": ["npm install", "npm run dev"],
    "learnMoreHeading": "Learn More",
    "templateDescription": "This project uses {template} template.",
    "convertToMonorepoHeading": "Converting to Monorepo",
    "convertToMonorepoDescription": "To convert this project to a monorepo structure, run:",
    "convertToMonorepoCommand": "fluorite-flake convert-to-monorepo",
    "monorepoDescription": "This is a monorepo project built with Fluorite Flake.",
    "workspaceStructureHeading": "Workspace Structure",
    "workspaceStructureDescription": "This project uses pnpm workspaces and Turbo for efficient development.",
    "developmentHeading": "Development",
    "developmentCommands": ["pnpm install", "pnpm dev"],
    "buildingHeading": "Building",
    "buildingCommands": ["pnpm build"],
    "testingHeading": "Testing",
    "testingCommands": ["pnpm test"]
  },
  "debug": {
    "devModeEnabled": "üîß Development mode enabled",
    "cwdLabel": "üìç Current working directory:",
    "nodeVersionLabel": "üîó Node version:",
    "argsLabel": "üì¶ CLI arguments:",
    "changedDirectory": "üìÇ Changed working directory to:",
    "debugMessage": "üêõ Debug: {message}"
  }
}
