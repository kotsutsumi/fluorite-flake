{
    "cli": {
        "metaDescription": "Boilerplate generator CLI for Next.js, Expo, and Tauri projects",
        "usage": "Usage: fluorite-flake <command> [options]",
        "commandsHeading": "Commands:",
        "commandLines": [
            "  create <name>    Create a new project",
            "  new <name>       Create a new project (alias for create)",
            "  dashboard        Launch dashboard (beta)"
        ],
        "projectTypes": "Project types: nextjs, expo, tauri",
        "examplesHeading": "Examples:",
        "exampleLines": [
            "  fluorite-flake create my-app",
            "  fluorite-flake new desktop-app --type tauri --template typescript"
        ],
        "helpHint": "Use --help with any command for more information",
        "devNoSubcommand": "Main command called with no subcommand"
    },
    "dashboard": {
        "commandDescription": "Launch interactive dashboard (beta)",
        "headerTitle": "Fluorite Flake Dashboard",
        "instructions": ["Press \"s\" to switch services", "Press \"q\" or Esc to exit"],
        "logsInstructions": [
            "Use j/k or arrow keys to scroll",
            "Press c to clear logs",
            "Press g to jump to the latest entry"
        ],
        "activeServiceLabel": "Active service",
        "footerShortcuts": {
            "vercel": "q:Exit   s:Switch service",
            "turso": "q:Exit   s:Switch service",
            "logs": "q:Exit   s:Switch service   j/k:Scroll   c:Clear"
        },
        "footerVersionLabel": "v{version}",
        "vercel": {
            "initializing": "Initializing Vercel service...",
            "needsToken": "‚ùå A Vercel token is required.",
            "openTokenPage": "Open token issuance page",
            "enterToken": "Enter token",
            "inputPromptEmpty": "Input: (empty)",
            "inputPromptValue": "Input: {value}",
            "inputHint": "Press Enter to save / Esc to cancel",
            "browserOpening": "Launching browser...",
            "browserOpenFailed": "Failed to launch browser: {error}",
            "tokenValidationError": "Token validation error",
            "tokenValidateFailed": "Token validation failed: {error}",
            "tokenMissingError": "Please enter a token",
            "tokenLoadFailed": "Failed to load Vercel token: {error}",
            "tokenSaveFailed": "Failed to save Vercel token: {error}",
            "tokenSaved": "‚úÖ Vercel token saved.",
            "tokenInputCancelled": "Token input cancelled.",
            "footerInitializing": "Initializing‚Ä¶",
            "footerNeedsToken": "Awaiting token",
            "footerInput": "Entering token (Enter=save / Esc=cancel)",
            "footerReady": "Ready",
            "footerError": "Error",
            "ready": "Vercel service is ready.",
            "logBrowserOpenStart": "üåê Opening Vercel token page in your browser.",
            "logBrowserOpenFailed": "‚ùå Browser launch failed: {error}",
            "logTokenLoaded": "‚ôªÔ∏è Loaded existing Vercel token.",
            "logTokenLoadFailed": "‚ùå Failed to load Vercel token: {error}",
            "logTokenSaved": "‚úÖ Accepted Vercel token.",
            "logTokenValidationFailed": "‚ö†Ô∏è Vercel token validation failed: {error}",
            "logTokenSaveFailed": "‚ùå Failed to store Vercel token: {error}",
            "logTokenInputCancelled": "‚Ü©Ô∏è Token input cancelled.",
  "projectSection": {
    "loading": "Fetching Vercel projects‚Ä¶",
    "tokenMissing": "Add a Vercel access token to load your projects.",
    "error": "Failed to retrieve projects: {error}",
    "empty": "No projects found for this account.",
    "showingCount": "Showing {count} projects.",
    "totalCount": "Total projects available: {count}",
    "logFetchStart": "üì° Fetching project list from Vercel‚Ä¶",
    "logFetchSuccess": "‚úÖ Retrieved {count} Vercel projects.",
    "logFetchFailure": "‚ùå Failed to fetch Vercel projects: {error}",
    "selectionHint": "Press Tab to focus projects, use ‚Üë/‚Üì to move between items, then Enter to open.",
    "createButtonLabel": "New project",
    "createButtonHint": "Press Tab to highlight the New project button, then Enter to start.",
    "actionsHeading": "Actions",
    "actionsHint": "Press Enter to create a new project.",
    "selectionConfirmed": "Selected project: {name}",
    "logSelection": "üîñ Selected project \"{name}\".",
    "logCreateRequested": "üÜï Opening the new project form.",
    "footerToggle": "Esc:return"
  },
  "teamSection": {
    "loading": "Fetching Vercel teams‚Ä¶",
    "tokenMissing": "A Vercel token is required to list teams.",
    "error": "Failed to load teams: {error}",
    "empty": "No teams available for this account.",
    "activeTag": "(active)",
    "selectionHint": "Press Tab to focus teams, use ‚Üë/‚Üì, then Enter to activate.",
    "footerToggle": "Tab:toggle focus",
    "createdLabel": "Created: {timestamp}",
    "lastActivatedFeedback": "Active team: {name}",
    "logFetchStart": "üì° Fetching team list‚Ä¶",
    "logFetchSuccess": "‚úÖ Retrieved {count} teams.",
    "logFetchFailure": "‚ùå Failed to fetch teams: {error}",
    "logActivating": "Switching active team to {name}‚Ä¶",
    "logActivated": "Active team set to {name}.",
    "logActivationFailed": "Failed to set active team {name}: {error}"
  },
            "projectDetail": {
                "heading": "Project detail: {name}",
                "loading": "Loading project details...",
                "tokenMissing": "Vercel access token is missing.",
                "backHint": "Press Esc to return to the project list.",
                "footerLabel": "Esc:return",
                "error": "Failed to load project: {error}",
                "genericError": "Failed to load project details.",
                "metadataHeading": "Project metadata",
                "idLabel": "ID: ",
                "frameworkLabel": "Framework: ",
                "unknown": "unknown",
                "gitRepositoryLabel": "Repository: ",
                "productionBranchLabel": "Production branch: ",
                "createdAtLabel": "Created at: ",
                "updatedAtLabel": "Updated at: ",
                "domainsHeading": "Domains",
                "noDomains": "No domains configured.",
                "domainStatusVerified": "Verified",
                "domainStatusPending": "Pending verification",
                "domainCreatedLabel": "Created: {timestamp}",
                "domainRedirectLabel": "Redirects to: {target}",
                "logFetchStart": "Fetching project details for {name}...",
                "logFetchSuccess": "Loaded project details for {name}.",
                "logFetchFailure": "Failed to load project details for {name}: {error}"
            },
            "projectCreate": {
                "heading": "Create a new Vercel project",
                "tokenMissing": "A Vercel access token is required before creating a project.",
                "navigationHint": "Tab to move between fields and buttons. Enter edits or confirms. Esc cancels.",
                "nameLabel": "Project name",
                "namePlaceholder": "e.g. fluorite-dashboard",
                "frameworkLabel": "Framework",
                "frameworkPlaceholder": "Optional (nextjs, remix, ...)",
                "gitProviderLabel": "Git provider",
                "gitProviderPlaceholder": "Optional (github, gitlab, bitbucket)",
                "gitRepositoryLabel": "Git repository",
                "gitRepositoryPlaceholder": "Optional owner/repo",
                "productionBranchLabel": "Production branch",
                "productionBranchPlaceholder": "Optional (defaults to main)",
                "submitLabel": "Create project",
                "cancelLabel": "Cancel",
                "validationNameRequired": "Project name is required.",
                "validationGitProviderRequired": "Git provider is required when repository is set.",
                "validationGitRepositoryRequired": "Git repository is required when provider is set.",
                "requestInProgress": "Creating project‚Ä¶",
                "requestSuccess": "Project {name} created successfully.",
                "requestFailure": "Failed to create project: {error}",
                "footerLabel": "Esc:back",
                "logCreateStart": "üöÄ Creating a new Vercel project‚Ä¶",
                "logCreateSuccess": "‚úÖ Created Vercel project \"{name}\".",
                "logCreateFailure": "‚ùå Failed to create project \"{name}\": {error}"
            }
        },
        "services": {
            "vercel": "Vercel",
            "turso": "Turso Cloud",
            "logs": "Logs"
        },
        "placeholders": {
            "vercel": "Vercel dashboard mock: projects, deployments, and environments will appear here.",
            "turso": "Turso Cloud dashboard mock: databases, branches, and usage metrics will appear here.",
            "logs": "No logs recorded yet. Actions will appear here."
        },
        "nonInteractiveError": [
            "‚ö†Ô∏è  The dashboard requires an interactive terminal.",
            "    Run this command directly in a local terminal session."
        ]
    },
    "create": {
        "commandDescription": "Create a new project",
        "newCommandDescription": "Create a new project (alias for create)",
        "args": {
            "type": "Project type (nextjs|expo|tauri)",
            "name": "Project name",
            "template": "Template to use",
            "dir": "Target directory",
            "force": "Force creation (overwrite existing)",
            "monorepo": "Create as monorepo structure (default: true)",
            "simple": "Create a simple project (non-monorepo structure)",
            "database": "Database to use (turso|supabase|sqlite)"
        },
        "invalidProjectType": "‚ùå Invalid project type: {type}",
        "availableProjectTypes": "Available types: nextjs, expo, tauri",
        "invalidTemplate": "‚ùå Invalid template \"{template}\" for {projectType}",
        "availableTemplates": "Available templates: {templates}",
        "selectProjectTypePrompt": "Select a project type:",
        "selectTemplatePrompt": "Select a template for {typeName}:",
        "selectDatabasePrompt": "Select a database:",
        "confirmMonorepoPrompt": "The {template} template works best as a monorepo. Enable monorepo structure?",
        "invalidDatabase": "‚ùå Invalid database type: {database}",
        "availableDatabases": "Available databases: turso, supabase, sqlite",
        "spinnerCreating": "Creating {type} project: {name}",
        "spinnerSettingUp": "Setting up {type} project structure...",
        "spinnerInstallingDeps": "Installing dependencies...",
        "spinnerConfiguringTemplate": "Configuring {template} template...",
        "spinnerPostInstalling": "üì¶ Reinstalling dependencies...",
        "spinnerSuccess": "‚úÖ Successfully created {type} project: {name}",
        "spinnerFailure": "‚ùå Failed to create project",
        "postInstallFailed": "‚ö†Ô∏è Failed to reinstall dependencies. Please run `pnpm install` manually.",
        "postInstallSkipped": "‚ÑπÔ∏è Skipped dependency reinstallation",
        "errorPrefix": "Error:",
        "nextStepsHeading": "Next steps:",
        "nextStepsCd": "  cd {directory}",
        "nextStepCommands": {
            "expo": "  npx expo start",
            "tauri": "  npm run tauri dev",
            "default": "  npm run dev"
        },
        "debugCommandCalled": "Create command called with:",
        "debugProjectConfig": "Project configuration:",
        "debugGenerationSuccess": "Project generation completed successfully",
        "debugGenerationFailure": "Project generation failed:",
        "pnpmNotFound": "‚ùå pnpm not found.",
        "pnpmVersionTooOld": "‚ùå pnpm v{version} detected. v{minVersion}.0.0+ required.",
        "pnpmVersionValid": "‚úÖ pnpm v{version} detected.",
        "pnpmInstallGuide": "üì¶ pnpm installation guide:",
        "pnpmInstallCommands": [
            "  npm install -g pnpm@latest",
            "  # or",
            "  curl -fsSL https://get.pnpm.io/install.sh | sh -"
        ],
        "pnpmMoreInfo": "  For more information: https://pnpm.io/installation",
        "promptProjectName": "Enter project name:",
        "projectNamePlaceholder": "Project name (e.g. my-fluorite-project)",
        "projectNameRequired": "‚ùå Project name is required. Please enter a project name.",
        "projectAlreadyExists": "‚ö†Ô∏è A project with the name '{name}' already exists. Please choose a different name.",
        "usingDefaultProjectName": "‚ÑπÔ∏è Using default project name: my-fluorite-project",
        "invalidProjectName": "‚ùå Invalid project name. Only alphanumeric characters, hyphens, and underscores are allowed.",
        "directoryExists": "‚ö†Ô∏è Directory '{0}' already exists.",
        "confirmOverwrite": "Do you want to remove it and create a new project? (y/N): ",
        "directoryRemoved": "‚úÖ Removed existing directory: {0}",
        "failedToRemoveDirectory": "‚ùå Failed to remove directory: {0}",
        "operationCancelled": "Operation cancelled.",
        "envEncryption": {
            "confirmPrompt": "üîê Would you like to encrypt environment variables for secure team sharing?",
            "processing": "üîê Encrypting environment variables...",
            "success": "‚úÖ Generated env-files.zip ({zipPath})",
            "failed": "‚ùå Failed to encrypt environment variables",
            "skipped": "‚ÑπÔ∏è Environment variable encryption skipped",
            "manualCommand": "Manual execution: pnpm env:encrypt",
            "shareInstruction": "üì§ When sharing with your team, please securely share the password"
        },
        "confirmation": {
            "title": "Configuration Confirmation",
            "projectInfo": "Project Information",
            "databaseInfo": "Database Configuration",
            "continuePrompt": "Do you want to proceed with this configuration?",
            "cancelled": "Project creation cancelled",
            "vercelLink": "Link Vercel project"
        },
        "vercelLinkConfirm": "üîó Would you like to link this project with Vercel now?",
        "vercelLinkSkipped": "Skipping Vercel project linking.",
        "vercelLinkProjectListFailed": "Failed to fetch Vercel projects. Please run `vercel login` and try again.",
        "vercelLinkSelectProject": "Select a Vercel project to link.",
        "vercelLinkManualChoice": "Enter project information manually",
        "vercelLinkProjectIdPrompt": "Enter the Vercel project ID (prj_...)",
        "vercelLinkProjectIdError": "Project ID is required.",
        "vercelLinkProjectNamePrompt": "Enter the Vercel project name.",
        "vercelLinkProjectNameError": "Project name is required.",
        "vercelLinkCreateRepoPrompt": "Generate .vercel/repo.json for this workspace?",
        "vercelLinkToggleYes": "Yes",
        "vercelLinkToggleNo": "No",
        "vercelLinkDirectoryPrompt": "Enter the relative directory for this project (e.g. apps/web).",
        "vercelLinkDirectoryError": "Directory is required.",
        "vercelLinkRemotePrompt": "Enter the Git remote name to associate.",
        "vercelLinkRemoteError": "Remote name is required.",
        "vercelLinkOrgIdPrompt": "Enter the Vercel org/team ID (team_...).",
        "vercelLinkOrgIdError": "Organization ID is required.",
        "vercelLinkCancelled": "Linking was cancelled. You can run `vercel link` later.",
        "vercelLinkSuccess": "Linked to Vercel project {projectName}.",
        "turso": {
            "initializing": "üîÑ Initializing Turso Cloud...",
            "ready": "‚úÖ Turso Cloud is ready.",
            "initializationFailed": "‚ùå Turso Cloud initialization failed.",
            "footerInitializing": "Initializing...",
            "footerLoginRequired": "Login required",
            "footerError": "Initialization error",
            "retryHint": "Press \"r\" after logging in to retry.",
            "validTokenReused": "üîÅ Reusing existing Turso access token.",
            "invalidTokenDetected": "‚ö†Ô∏è Stored Turso access token is invalid. Generating a new token.",
            "noExistingToken": "‚ÑπÔ∏è No Turso access token found. Generating a new token.",
            "promptLoginTitle": "Turso CLI login required",
            "promptLogin": "Run `turso auth login` in another terminal, then rerun this command.",
            "cliNotFound": "‚ùå Turso CLI is not installed or not found in PATH.",
            "cliTokenFailed": "‚ùå Failed to retrieve a management token from the Turso CLI.",
            "cliTokenEmpty": "‚ùå Turso CLI returned an empty token.",
            "cliLoginConfirmed": "‚úÖ Turso CLI login confirmed.",
            "apiError": "‚ö†Ô∏è Turso API request failed ({status}).",
            "tokenRevoked": "‚ôªÔ∏è Revoked existing Turso token \"{tokenName}\".",
            "tokenRegenerated": "üîë Generated new Turso token \"{tokenName}\".",
            "tokenCreateEmpty": "‚ùå Turso API did not return a token value.",
            "tokenStored": "üíæ Stored Turso access token in {configPath}."
        }
    },
    "new": {
        "commandDescription": "Create a new project",
        "projectNamePrompt": "Enter project name:",
        "projectNamePlaceholder": "Project name (e.g. my-awesome-project)",
        "projectNameRequired": "Project name is required",
        "invalidProjectName": "Invalid project name. Only alphanumeric characters, hyphens, and underscores are allowed.",
        "directoryExists": "Directory '{directory}' already exists.",
        "confirmOverwrite": "Do you want to remove the existing directory and create a new project?",
        "operationCancelled": "Operation cancelled.",
        "generatingProject": "Generating project '{projectName}'...",
        "setupComplete": "‚úÖ Project \"{projectName}\" setup complete!",
        "setupFailed": "‚ùå Project setup failed",
        "nextStepsTitle": "Next steps to start development:",
        "nextStepsCommands": ["  cd {projectName}", "  pnpm dev"],
        "serverInfo": "Development servers will start:",
        "serverList": [
            "  - backend: http://localhost:3001",
            "  - web: http://localhost:3000",
            "  - docs: http://localhost:3002"
        ]
    },
    "readme": {
        "title": "{name}",
        "description": "A {type} project created with Fluorite Flake.",
        "gettingStartedHeading": "Getting Started",
        "gettingStartedCommands": ["npm install", "npm run dev"],
        "learnMoreHeading": "Learn More",
        "templateDescription": "This project uses {template} template.",
        "convertToMonorepoHeading": "Converting to Monorepo",
        "convertToMonorepoDescription": "To convert this project to a monorepo structure, run:",
        "convertToMonorepoCommand": "fluorite-flake convert-to-monorepo",
        "monorepoDescription": "This is a monorepo project built with Fluorite Flake.",
        "workspaceStructureHeading": "Workspace Structure",
        "workspaceStructureDescription": "This project uses pnpm workspaces and Turbo for efficient development.",
        "developmentHeading": "Development",
        "developmentCommands": ["pnpm install", "pnpm dev"],
        "buildingHeading": "Building",
        "buildingCommands": ["pnpm build"],
        "testingHeading": "Testing",
        "testingCommands": ["pnpm test"]
    },
    "common": {
        "enabled": "enabled",
        "disabled": "disabled",
        "projectName": "Project Name",
        "projectType": "Project Type",
        "template": "Template",
        "monorepo": "Monorepo",
        "outputDir": "Output Directory"
    },
    "debug": {
        "devModeEnabled": "üîß Development mode enabled",
        "cwdLabel": "üìç Current working directory:",
        "nodeVersionLabel": "üîó Node version:",
        "argsLabel": "üì¶ CLI arguments:",
        "changedDirectory": "üìÇ Changed working directory to:",
        "debugMessage": "üêõ Debug: {message}"
    }
}
