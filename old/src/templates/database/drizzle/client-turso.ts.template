import { drizzle } from 'drizzle-orm/libsql';
import { createClient } from '@libsql/client';
import * as schema from './schema';

// Environment-aware database connection for Turso with Drizzle
// Automatically switches between local development and cloud databases
// based on the deployment environment

function getEnvironment(): 'production' | 'staging' | 'development' | 'local' {
  // On Vercel, use VERCEL_ENV to determine environment
  if (process.env.VERCEL_ENV) {
    if (process.env.VERCEL_ENV === 'production') return 'production';
    if (process.env.VERCEL_ENV === 'preview') {
      // For preview deployments, check branch or use staging as default
      if (process.env.VERCEL_GIT_COMMIT_REF === 'develop' ||
          process.env.VERCEL_GIT_COMMIT_REF === 'staging') {
        return 'staging';
      }
      return 'development';
    }
  }

  // For local development or other environments
  if (process.env.NODE_ENV === 'development') return 'local';
  if (process.env.NODE_ENV === 'production') return 'production';

  return 'local'; // Default to local
}

function getDatabaseConfig() {
  const env = getEnvironment();

  switch (env) {
    case 'production':
      return {
        url: process.env.TURSO_DATABASE_URL_PROD || process.env.TURSO_DATABASE_URL || process.env.DATABASE_URL || '',
        authToken: process.env.TURSO_AUTH_TOKEN_PROD || process.env.TURSO_AUTH_TOKEN,
      };
    case 'staging':
      return {
        url: process.env.TURSO_DATABASE_URL_STG || process.env.TURSO_DATABASE_URL || process.env.DATABASE_URL || '',
        authToken: process.env.TURSO_AUTH_TOKEN_STG || process.env.TURSO_AUTH_TOKEN,
      };
    case 'development':
      return {
        url: process.env.TURSO_DATABASE_URL_DEV || process.env.TURSO_DATABASE_URL || process.env.DATABASE_URL || '',
        authToken: process.env.TURSO_AUTH_TOKEN_DEV || process.env.TURSO_AUTH_TOKEN,
      };
    case 'local':
    default:
      return {
        url: process.env.DATABASE_URL || 'file:./prisma/dev.db',
        authToken: undefined, // No auth token needed for local SQLite
      };
  }
}

const { url, authToken } = getDatabaseConfig();
const environment = getEnvironment();

console.log(`üóÑÔ∏è Connecting to Turso database with Drizzle (${environment}):`, url.replace(/authToken=[^&]+/, 'authToken=***'));

const client = createClient({
  url,
  authToken,
});

export const db = drizzle(client, { schema });