import { createClient } from '@supabase/supabase-js';

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;
const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;
const bucket = process.env.SUPABASE_STORAGE_BUCKET ?? 'uploads';

const supabase = createClient(supabaseUrl, serviceRoleKey);

export async function uploadBuffer(buffer: Buffer, filename: string, contentType?: string) {
  const objectKey = 'uploads/' + Date.now() + '-' + filename;

  const uploadResult = await supabase.storage.from(bucket).upload(objectKey, buffer, {
    contentType,
    upsert: true,
  });

  if (uploadResult.error) {
    throw uploadResult.error;
  }

  const signedUrl = await supabase.storage.from(bucket).createSignedUrl(objectKey, 60 * 60);

  if (signedUrl.error) {
    throw signedUrl.error;
  }

  return signedUrl.data?.signedUrl ?? '';
}